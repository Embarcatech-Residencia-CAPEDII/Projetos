{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "API de Monitoramento de Temperatura",
    "description": "Essa API permite o monitoramento de temperatura em diferentes ambientes hospitalares utilizando IoT. Ela oferece endpoints para gerenciar usuários, ambientes e leituras de temperatura."
  },
  "servers": [
    {
      "url": "http://localhost:5000",
      "description": "Servidor Local"
    }
  ],
  "paths": {
    "/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Realiza o login de um usuário",
        "description": "Esse endpoint permite que um usuário faça login no sistema.",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "joao.silva@example.com",
                    "required": true
                  },
                  "password": {
                    "type": "string",
                    "example": "SenhaSegura123",
                    "required": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "/temperatures": {
      "get": {
        "tags": [
          "Temperature"
        ],
        "summary": "Obtém todas as leituras de temperatura",
        "description": "Esse endpoint retorna todas as leituras de temperatura registradas no sistema.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/temperature/{id}": {
      "get": {
        "tags": [
          "Temperature"
        ],
        "summary": "Obtém uma leitura de temperatura pelo ID",
        "description": "Esse endpoint retorna uma leitura de temperatura específica com base no ID fornecido.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/temperatures/interval": {
      "get": {
        "tags": [
          "Temperature"
        ],
        "summary": "Obtém todas as leituras de temperatura por intervalo",
        "description": "Esse endpoint retorna todas as leituras de temperatura registradas com base no intervalo de datas fornecidos.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/room": {
      "post": {
        "tags": [
          "Room"
        ],
        "summary": "Cria um novo ambiente",
        "description": "Esse endpoint cria um novo ambiente no sistema.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/rooms": {
      "get": {
        "tags": [
          "Room"
        ],
        "summary": "Obtém todos os ambientes",
        "description": "Esse endpoint retorna todos os ambientes registrados no sistema.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/room/{roomId}/temperatures": {
      "get": {
        "tags": [
          "Temperature"
        ],
        "summary": "Obtém as leituras de temperatura de um ambiente específico",
        "description": "Esse endpoint retorna todas as leituras de temperatura registradas para um ambiente específico com base no ID do ambiente fornecido.",
        "parameters": [
          {
            "name": "roomId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/room/{roomId}/temperatures/interval": {
      "get": {
        "tags": [
          "Temperature"
        ],
        "summary": "Obtém as leituras de temperatura de um ambiente específico por intervalo",
        "description": "Esse endpoint retorna todas as leituras de temperatura registradas para um ambiente específico com base no ID do ambiente e no intervalo de datas fornecidos.",
        "parameters": [
          {
            "name": "roomId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/room/id/{roomId}": {
      "get": {
        "tags": [
          "Room"
        ],
        "summary": "Obtém um ambiente pelo ID",
        "description": "Esse endpoint retorna um ambiente específico com base no ID fornecido.",
        "parameters": [
          {
            "name": "roomId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/room/microcontroller/{microcontrollerId}": {
      "get": {
        "tags": [
          "Room"
        ],
        "summary": "Obtém um ambiente pelo ID do microcontrolador",
        "description": "Esse endpoint retorna um ambiente específico com base no ID do microcontrolador fornecido.",
        "parameters": [
          {
            "name": "microcontrollerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/room/{roomId}": {
      "put": {
        "tags": [
          "Room"
        ],
        "summary": "Atualiza um ambiente pelo ID",
        "description": "Esse endpoint atualiza um ambiente específico com base no ID fornecido.",
        "parameters": [
          {
            "name": "roomId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Room"
        ],
        "summary": "Deleta um ambiente pelo ID",
        "description": "Esse endpoint deleta um ambiente específico com base no ID fornecido.",
        "parameters": [
          {
            "name": "roomId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/user": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "cria um novo usuário",
        "description": "Esse endpoint cria um novo usuário no sistema. É necessário fornecer um nome, email e senha válidos no corpo da requisição. O email deve ser único e a senha deve atender aos critérios de segurança estabelecidos. Ao criar um usuário com sucesso, o sistema retorna os detalhes do usuário criado, excluindo a senha por razões de segurança.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Usuário criado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "example": "64a7b2f5e4b0c8a1d2f3g4h5"
                    },
                    "name": {
                      "type": "string",
                      "example": "João Silva"
                    },
                    "email": {
                      "type": "string",
                      "example": "joao.silva@example.com"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "João Silva",
                    "required": true
                  },
                  "email": {
                    "type": "string",
                    "example": "joao.silva@example.com",
                    "required": true
                  },
                  "password": {
                    "type": "string",
                    "example": "SenhaSegura123",
                    "required": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Busca todos os usuários",
        "description": "Esse endpoint retorna uma lista de todos os usuários cadastrados no sistema.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de usuários retornada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string",
                        "example": "64a7b2f5e4b0c8a1d2f3g4h5"
                      },
                      "name": {
                        "type": "string",
                        "example": "João Silva"
                      },
                      "email": {
                        "type": "string",
                        "example": "joao.silva@example.com"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/user/{email}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Busca um usuário pelo email",
        "description": "Esse endpoint busca um usuário existente no sistema pelo seu email. É necessário fornecer um email válido como parâmetro. Se o usuário for encontrado, o sistema retorna os detalhes do usuário, excluindo a senha por razões de segurança.",
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Usuário encontrado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "example": "64a7b2f5e4b0c8a1d2f3g4h5"
                    },
                    "name": {
                      "type": "string",
                      "example": "João Silva"
                    },
                    "email": {
                      "type": "string",
                      "example": "joao.silva@example.com"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Usuário não encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Usuário não encontrado"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/user/{userId}": {
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Atualiza um usuário existente",
        "description": "Esse endpoint atualiza os dados de um usuário existente no sistema. É necessário fornecer um ID de usuário válido como parâmetro e os novos dados no corpo da requisição.",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "João Silva"
                  },
                  "email": {
                    "type": "string",
                    "example": "joao.silva@example.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "SenhaSegura123"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Deleta um usuário existente",
        "description": "Esse endpoint deleta um usuário existente no sistema. É necessário fornecer um ID de usuário válido como parâmetro.",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "user": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Jhon Doe"
          },
          "email": {
            "type": "string",
            "example": "jhon.doe@example.com"
          },
          "password": {
            "type": "string",
            "example": "SenhaSegura@123"
          },
          "role": {
            "type": "string",
            "example": "user"
          }
        },
        "required": [
          "name",
          "email",
          "password"
        ]
      },
      "temperature": {
        "type": "object",
        "properties": {
          "temperature": {
            "type": "number",
            "example": 22.5
          },
          "humidity": {
            "type": "number",
            "example": 60
          },
          "timestamp": {
            "type": "string",
            "example": "2023-10-01T12:00:00Z"
          },
          "roomId": {
            "type": "string",
            "example": "64a7b2f5e4b0c8a1d2f3g4h5"
          }
        },
        "required": [
          "temperature",
          "humidity",
          "roomId"
        ]
      },
      "room": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Sala do servidor"
          },
          "microcontrollerId": {
            "type": "string",
            "example": "MCU123456"
          },
          "min_temperature": {
            "type": "number",
            "example": 18
          },
          "max_temperature": {
            "type": "number",
            "example": 27
          }
        },
        "required": [
          "name",
          "microcontrollerId"
        ]
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}